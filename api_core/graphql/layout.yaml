Graphql:
  config:
    name: "关于ONES系统Graphql相关接口"
    base_url: "https://your-host-name/{main_product}/api/{minor_product}"
    together:
      url: &path_url "/team/{team_uuid}/items/graphql"
      base_url_product: &product
        main_product: "project"
        minor_product: "project"
      headers:
        Ones-User-Id: "调用登陆user_uuid"
        Ones-Auth-Token: "调用登陆token"
        referer: "https://your-host-name/{product}"

api_type:
  -
    notes: "根据issueType下uuid_equal的id，进行获取issueTypeLayouts信息"
    name: "issueTypeLayouts"
    is_login: True
    path: *path_url
    method: "post"
    url_product:
      <<: *product
    get_params:
      url_params: ""
      body_params:
        - body_value:
            key_name: "uuid_equal"
            field_path: "stamps/issue_type.yaml"
            yaml_api: "issue_type"
            find_response_path: "issue_type/response/save/field_uuid"
    json:
      - variables:
          filter:
            issueType:
              uuid_equal: "uuid_equal"
          orderBy:
            namePinyin: "ASC"
        query: "{↵    issueTypeLayouts(filter:$filter,orderBy:$orderBy) {↵      ↵  key↵  uuid↵  name↵  builtIn↵  haveDraft↵  issueType {↵    uuid↵    name↵  }↵  issueTypeTemplate {↵    name↵    uuid↵  }↵  ↵↵    }↵  }"
    params: ""
    setup:
      - body_value:
          key_name: "uuid_equal"
          field_path: "stamps/issue_type.yaml"
          yaml_api: "issue_type"
          find_response_path: "issue_type/response/save/field_uuid"
    response:
      status_code: 200
      save:
        path: "data."
        issueType_uuid: "issueType_uuid"